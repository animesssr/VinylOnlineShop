'use client'

import Image from 'next/image';
import cart_title from "./cart.svg"
import './cart.css'
import { useSelector, useDispatch } from 'react-redux';
import { removeFromCart } from '../redux/redux.slice';
import React, { useState, useEffect } from 'react';
import { useCookies } from 'next-client-cookies';

export default function Cart() {
  const cart = useSelector((state) => state.cart);
  const dispatch = useDispatch();
  const cookieStore = useCookies();
  const [cartCost, setCartCost] = useState(0);
  const [shipment, setShipment] = useState('pickup');
  const [shipAdress, setShipAdress] = useState(null);
  const [paymentMethod, setPaymentMethod] = useState(null);
  const [cardrdNumber, setCardNumber] = useState(null);
  const [cardExp, setCardExp] = useState(null);
  const [cardCvc, setCardCvc] = useState(null);
  

  function handleOrder() {
    if(shipment, shipAdress, paymentMethod)
    {
      fetch('https://localhost:7179/order', 
      { 
        method: 'POST', 
        headers: { "Content-type": "application/json" }, 
        body: JSON.stringify({cost: cartCost, status: 'pucking', shipMethod: shipment, adress: shipAdress, paymentMethod: paymentMethod, paymentStatus: 'notpaid', user: cookieStore.get('userID')})
      })
      .then((res) => res.json())
      .then((data) => {
        for (let i = 0; i < cart.length; i++) {
          fetch('https://localhost:7179/order/' + data.idOrders + '/item', { 
            method: 'POST', 
            headers: { "Content-type": "application/json" }, 
            body: JSON.stringify({ orderid: data.idOrders, itemVinylid: cart[i].idVinyls})
          }, dispatch(removeFromCart(cart[i].idVinyls)))
        }
      })
      .then(() => {alert('–ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω!')})
    } else {
      alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞!')
    }
  }

  useEffect(() => {
    let totalCost = 0;
    for (let i = 0; i < cart.length; i++) {
      totalCost += cart[i].cost;
    }
    setCartCost(totalCost);
  }, []);

  return (
    <div className="cart-main_block">
      <div className="cart-main">
      <picture className="main-txt">
          <Image className="main-txt_img" src={cart_title} alt='page name'></Image>
      </picture>
      {cart.length === 0 ? (
        <h1 className='empty_txt'>–í –∫–æ—Ä–∑–∏–Ω–µ –ø—É—Å—Ç–æ</h1>
      ) : (
        <>
        <div className='cart_vinyls'>
        {cart.map((vinyl) => (
            <div className='vinyl_incart'>
              <picture>
                <Image src={vinyl.cover} height={300} width={300} />
              </picture>
              <div className='cart-vinyl_info'>
                <div className='cart-vinyl_txt'>
                  <p className="cart-vinyl_artist">{vinyl.artist}</p>
                  <a className="cart-vinyl_name" href={'/vinylpage/'+vinyl.idVinyls}>{vinyl.name}</a>
                  <p className="cart-vinyl_edit">{vinyl.edition}</p>
                </div>
                <div className="cart-vinyl_bottom">
                    <p className="cart-vinyl_price">{vinyl.cost}‚ÇΩ</p>
                    <button className="cart-btn_incart" onClick={() => dispatch(removeFromCart(vinyl.idVinyls))}>–£–¥–∞–ª–∏—Ç—å</button>
                </div>
              </div>
            </div>
        ))}
        </div>
        </>
      )}
      </div>
      {cart.length != 0 ? (
        <div className="cart-order_info">
          <p className="cart-order_txt">–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞</p>
          <div className='order_shipment'>
            <p className='order_txt'>–î–æ—Å—Ç–∞–≤–∫–∞</p>
            <div className='—Å_method'>
              <div><input type='radio' name='shipment_method' value='pickup' id='pickup' onChange={(e) => setShipment(e.target.value)}/><label for='pickup'>–°–∞–º–æ–≤—ã–≤–æ–∑</label></div>
              <div><input type='radio' name='shipment_method' value='cdek' id='cdek' onChange={(e) => setShipment(e.target.value)}/><label for='cdek'>–°–î–≠–ö</label></div>
              <div><input type='radio' name='shipment_method' value='poofrus' id='poofrus' onChange={(e) => setShipment(e.target.value)}/><label for='poofrus'>–ü–æ—á—Ç–∞ –†–æ—Å—Å–∏–∏</label></div>
            </div>
            {shipment === 'pickup'? (
              <div className='order_pickup'>
                <div><p className='—Åart-p_txt'>–ü—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏</p></div>
                <div className='o_i'><input type='radio' name='pickup_address' value='planeta' id='planeta' onChange={(i) => setShipAdress(i.target.value)}/><label for='planeta'>–†–æ—Å—Å–∏—è, –≥. –ô–æ—à–∫–∞—Ä-–û–ª–∞, —É–ª. –ë–∞—É–º–∞–Ω–∞ 16, –¢–¶ ‚Äú–ü–ª–∞–Ω–µ—Ç–∞‚Äù</label></div>
                <div className='o_i'><input type='radio' name='pickup_address' value='dombyta' id='dombyta' onChange={(i) => setShipAdress(i.target.value)}/><label for='dombyta'>–†–æ—Å—Å–∏—è, –≥. –ô–æ—à–∫–∞—Ä-–û–ª–∞, —É–ª. –ü–µ—Ä–≤–æ–º–∞–π—Å–∫–∞—è 113, –¢–¶ ‚Äú–î–æ–º –¢–æ—Ä–≥–æ–≤–ª–∏‚Äù</label></div>
              </div>
            ) : (
              <div className='order_other'>
                <p className='—Åart-p_txt'>–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏</p>
                <input className='adress_input' type='text' name='ship_adress' placeholder='–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏' onChange={(e) => setShipAdress(e.target.value)}/>
              </div>
            )}
          </div>
          <div className='order_payment'>
            <p className='order_txt'>–û–ø–ª–∞—Ç–∞</p>
            <div className='—Å_method'>
            <div><input type='radio' name='payment' value='cash' id='cash' onChange={(o) => setPaymentMethod(o.target.value)}/><label for='cash'>–ù–∞–ª–∏—á–Ω—ã–º–∏</label></div>
            <div><input type='radio' name='payment' value='card' id='card' onChange={(o) => setPaymentMethod(o.target.value)}/><label for='card'>–ö–∞—Ä—Ç–æ–π –æ–Ω–ª–∞–π–Ω</label></div>
            </div>
            { paymentMethod === 'cash' ? (
              <div className='payment_cash'>
                <p className='payment_txt'>–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –Ω–∞–ª–∏—á–∫—É üåπ</p>
              </div>
            ) : (
              <div className='payment_card'>
                <p className='—Åart-p_txt'>–ö–∞—Ä—Ç–∞</p>
                <input className='card_num' type='text' name='card_number' placeholder='–Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã' onChange={(e) => setCardNumber(e.target.value)}/>
                <div className='card_exp'>
                  <input type='text' name='exp' placeholder='—Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è' onChange={(e) => setCardExp(e.target.value)}/>
                  <input type='text' name='cvc' placeholder='CVC/CVV' onChange={(e) => setCardCvc(e.target.value)}/>
                  </div>
              </div>
            )}
          </div>
          <div className='order_total'>
            <p className='order_total-txt'>–ò—Ç–æ–≥–æ: {cartCost}‚ÇΩ</p>
            <button className="order_btn" onClick={() => handleOrder()}>–û–§–û–†–ú–ò–¢–¨ –ó–ê–ö–ê–ó</button>
          </div>
        </div>
        ) : (null)}
    </div>
  );
}